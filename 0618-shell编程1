1.shell脚本
	cshell、kshell、bash shell
	echo $SHELL
	/bin/bash
2.脚本文件的执行方式
	./文件名  需要文件有执行权限
	bash 文件名 不需要执行权限
3.shell脚本组成
	若干命令+脚本的基本格式+特定于法=shell脚本
	把需要的命令保存到文本中，然后执行
4.完整格式的脚本
	shell脚本通常以.sh结尾
	#!/bin/bash  #脚本第一行使用#!(魔法字节)指定脚本代码执行的程序
	echo "memeda"
	hostname
	d1.标准的脚本执行方法(魔法字节指定的程序会生效)
		chmod 755 3.sh           给脚本执行权限
		./3.sh
		或者
		/root/0618/3.sh
	d2.非标准执行方法(不推荐)(魔法字节指定的程序不会运行)
		. ./4.sh
		或者
		source ./4.sh
		或者
		bash ./4.sh
		或者
		sh   ./4.sh
5.脚本的应用场景
	把重复的复杂的工作通过把命令写成脚本，以后仅仅需要执行脚本就可以完成工作
6.如何学习脚本
	a.尽可能多记命令
	b.掌握脚本的标准格式
		执行魔法字节和使用标准执行方式运行脚本
	c.掌握脚本的基本语法
		变量定义
		条件判断
		分支语句
		函数
		数组
		传参
		正则表达式
		sed、awk命令
7.变量的定义
	默认情况下定义变量是不区分类型，可以赋予变量任何类型数据
		a=123
		a='zone'
	定义变量时候=左右不能有空格
		a  =10 X
		a= 10  X
		a = 10 X
8.变量的分类
	环境变量
	用来影响程序执行过程或者执行结果的，一般环境变量习惯大写进行命名
	查看当前终端（shell）已经定义了哪些环境变量
		env
	定义环境变量
	临时修改某个环境中的环境变量
		export PATH=$PATH:/root/mongodb/bin
	永久修改某个环境中的环境变量
		vim .bash_profile进行修改
	系统变量
	shell本身已经固定好了名字和作用
	$1,$2。。。。。$@,$*....
	$?    上次命令是否执行成功，如果为0，执行成功
	!$    上一次操作最后一个参数
	$1    文件后第一个参数
	$2    文件后第二个参数
	$#    参数的总数
	$*    所有传递进来的参数
	$$    shell对应的进程id
